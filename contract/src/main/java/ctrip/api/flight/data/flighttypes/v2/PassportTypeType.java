// Generated by eBay Common SDK Platform
package ctrip.api.flight.data.flighttypes.v2;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * 护照类型
 */
@XmlType(name = "PassportTypeType")
@XmlEnum
@SuppressWarnings("all")
public enum PassportTypeType {

    @XmlEnumValue("Diplomatic")
    Diplomatic(0, "Diplomatic"),

    @XmlEnumValue("Service")
    Service(1, "Service"),

    @XmlEnumValue("PublicAffairs")
    PublicAffairs(2, "PublicAffairs"),

    @XmlEnumValue("National")
    National(3, "National"),

    @XmlEnumValue("Travel")
    Travel(4, "Travel"),

    @XmlEnumValue("SpecialAdmin")
    SpecialAdmin(5, "SpecialAdmin"),

    @XmlEnumValue("Alien's")
    Aliens(6, "Alien's"),

    @XmlEnumValue("Collective")
    Collective(7, "Collective"),

    @XmlEnumValue("Consular")
    Consular(8, "Consular"),

    @XmlEnumValue("Seaman's")
    Seamans(9, "Seaman's");

    private final int intValue;
    private final String value;

    PassportTypeType(int intValue, String value) {
        this.intValue = intValue;
        this.value = value;
    }

    public int getValue() {
        return intValue;
    }

    @JsonValue
    public String value() {
        return value;
    }

    @JsonCreator
    public static PassportTypeType fromValue(String v) {
        for (PassportTypeType e: PassportTypeType.values()) {
            if (e.value.equals(v)) {
                return e;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static PassportTypeType findByValue(int value) {
        switch (value) {
            case 0:
                return Diplomatic;
            case 1:
                return Service;
            case 2:
                return PublicAffairs;
            case 3:
                return National;
            case 4:
                return Travel;
            case 5:
                return SpecialAdmin;
            case 6:
                return Aliens;
            case 7:
                return Collective;
            case 8:
                return Consular;
            case 9:
                return Seamans;
            default:
                return null;
        }
    }
}