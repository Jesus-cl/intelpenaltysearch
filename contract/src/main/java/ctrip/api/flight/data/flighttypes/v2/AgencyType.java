/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package ctrip.api.flight.data.flighttypes.v2;

import com.ctriposs.baiji.exception.BaijiRuntimeException;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.schema.Field;
import com.ctriposs.baiji.schema.RecordSchema;
import com.ctriposs.baiji.schema.Schema;
import com.ctriposs.baiji.specific.SpecificRecord;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 票台信息
 */
@DtoDoc("票台信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AgencyType", propOrder = {
    "agencyID",
    "agencyCode",
    "cityID",
    "cityCode",
    "agencyName",
    "officialName"
})
@SuppressWarnings("all")
public class AgencyType implements SpecificRecord {

    private static final long serialVersionUID = 1L;

	public static final Schema SCHEMA = Schema.parse("{\"type\":\"record\",\"name\":\"AgencyType\",\"namespace\":\"" + AgencyType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"agencyID\",\"type\":\"int\"},{\"name\":\"agencyCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"cityID\",\"type\":\"int\"},{\"name\":\"cityCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"agencyName\",\"type\":[\"string\",\"null\"]},{\"name\":\"officialName\",\"type\":[\"string\",\"null\"]}]}");

    @Override
    public Schema getSchema() { return SCHEMA; }

    public AgencyType(
        int agencyID, 
        String agencyCode, 
        int cityID, 
        String cityCode, 
        String agencyName, 
        String officialName) {
        this.agencyID = agencyID;
        this.agencyCode = agencyCode;
        this.cityID = cityID;
        this.cityCode = cityCode;
        this.agencyName = agencyName;
        this.officialName = officialName;
    }

    public AgencyType() {
    }

    @FieldDoc("*票台ID")
    @JsonProperty("AgencyID")
    @XmlElement(name = "AgencyID")
    private int agencyID;

    @FieldDoc("*票台代码")
    @JsonProperty("AgencyCode")
    @XmlElement(name = "AgencyCode")
    private String agencyCode;

    @FieldDoc("城市ID")
    @JsonProperty("CityID")
    @XmlElement(name = "CityID")
    private int cityID;

    @FieldDoc("城市代码")
    @JsonProperty("CityCode")
    @XmlElement(name = "CityCode")
    private String cityCode;

    @FieldDoc("供应商名称")
    @JsonProperty("AgencyName")
    @XmlElement(name = "AgencyName")
    private String agencyName;

    @FieldDoc("供应商航协认可的名称")
    @JsonProperty("OfficialName")
    @XmlElement(name = "OfficialName")
    private String officialName;

    /**
     * *票台ID
     */
    public int getAgencyID() {
        return this.agencyID;
    }

    public void setAgencyID(int agencyID) {
        this.agencyID = agencyID;
    }

    /**
     * *票台代码
     */
    public String getAgencyCode() {
        return this.agencyCode;
    }

    public void setAgencyCode(String agencyCode) {
        this.agencyCode = agencyCode;
    }

    /**
     * 城市ID
     */
    public int getCityID() {
        return this.cityID;
    }

    public void setCityID(int cityID) {
        this.cityID = cityID;
    }

    /**
     * 城市代码
     */
    public String getCityCode() {
        return this.cityCode;
    }

    public void setCityCode(String cityCode) {
        this.cityCode = cityCode;
    }

    /**
     * 供应商名称
     */
    public String getAgencyName() {
        return this.agencyName;
    }

    public void setAgencyName(String agencyName) {
        this.agencyName = agencyName;
    }

    /**
     * 供应商航协认可的名称
     */
    public String getOfficialName() {
        return this.officialName;
    }

    public void setOfficialName(String officialName) {
        this.officialName = officialName;
    }

    // Used by DatumWriter. Applications should not call.
    @Override
    public Object get(int fieldPos) {
        switch(fieldPos) {
            case 0: return (int) this.agencyID;
            case 1: return (String) this.agencyCode;
            case 2: return (int) this.cityID;
            case 3: return (String) this.cityCode;
            case 4: return (String) this.agencyName;
            case 5: return (String) this.officialName;
            default: throw new BaijiRuntimeException("Bad index " + fieldPos + " in get()");
        }
    }

    // Used by DatumReader. Applications should not call.
    @Override
    public void put(int fieldPos, Object fieldValue) {
        switch(fieldPos) {
            case 0: this.agencyID = (int)fieldValue; break;
            case 1: this.agencyCode = (String)fieldValue; break;
            case 2: this.cityID = (int)fieldValue; break;
            case 3: this.cityCode = (String)fieldValue; break;
            case 4: this.agencyName = (String)fieldValue; break;
            case 5: this.officialName = (String)fieldValue; break;
            default: throw new BaijiRuntimeException("Bad index " + fieldPos + " in put()");
        }
    }

    @Override
    public Object get(String fieldName) {
        Schema schema = getSchema();
        if (!(schema instanceof RecordSchema)) {
            return null;
        }
        Field field = ((RecordSchema) schema).getField(fieldName);
        return field != null ? get(field.getPos()) : null;
    }

    @Override
    public void put(String fieldName, Object fieldValue) {
        Schema schema = getSchema();
        if (!(schema instanceof RecordSchema)) {
            return;
        }
        Field field = ((RecordSchema) schema).getField(fieldName);
        if (field != null) {
            put(field.getPos(), fieldValue);
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final AgencyType other = (AgencyType)obj;
        return
            Objects.equal(this.agencyID, other.agencyID) && 
            Objects.equal(this.agencyCode, other.agencyCode) && 
            Objects.equal(this.cityID, other.cityID) && 
            Objects.equal(this.cityCode, other.cityCode) && 
            Objects.equal(this.agencyName, other.agencyName) && 
            Objects.equal(this.officialName, other.officialName);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.agencyID);
        result = 31 * result + Objects.hashCode(this.agencyCode);
        result = 31 * result + Objects.hashCode(this.cityID);
        result = 31 * result + Objects.hashCode(this.cityCode);
        result = 31 * result + Objects.hashCode(this.agencyName);
        result = 31 * result + Objects.hashCode(this.officialName);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("agencyID", agencyID)
            .add("agencyCode", agencyCode)
            .add("cityID", cityID)
            .add("cityCode", cityCode)
            .add("agencyName", agencyName)
            .add("officialName", officialName)
            .toString();
    }
}