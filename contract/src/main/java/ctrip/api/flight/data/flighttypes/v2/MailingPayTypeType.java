// Generated by eBay Common SDK Platform
package ctrip.api.flight.data.flighttypes.v2;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * 快递方式（用于下单接口）
 */
@XmlType(name = "MailingPayTypeType")
@XmlEnum
@SuppressWarnings("all")
public enum MailingPayTypeType {

    @XmlEnumValue("Normal")
    Normal(0, "Normal"),

    @XmlEnumValue("Integral")
    Integral(1, "Integral"),

    @XmlEnumValue("GiftCard")
    GiftCard(2, "GiftCard"),

    @XmlEnumValue("DiamondFree")
    DiamondFree(3, "DiamondFree"),

    @XmlEnumValue("BossFree")
    BossFree(4, "BossFree"),

    @XmlEnumValue("CarCoupon")
    CarCoupon(5, "CarCoupon");

    private final int intValue;
    private final String value;

    MailingPayTypeType(int intValue, String value) {
        this.intValue = intValue;
        this.value = value;
    }

    public int getValue() {
        return intValue;
    }

    @JsonValue
    public String value() {
        return value;
    }

    @JsonCreator
    public static MailingPayTypeType fromValue(String v) {
        for (MailingPayTypeType e: MailingPayTypeType.values()) {
            if (e.value.equals(v)) {
                return e;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static MailingPayTypeType findByValue(int value) {
        switch (value) {
            case 0:
                return Normal;
            case 1:
                return Integral;
            case 2:
                return GiftCard;
            case 3:
                return DiamondFree;
            case 4:
                return BossFree;
            case 5:
                return CarCoupon;
            default:
                return null;
        }
    }
}