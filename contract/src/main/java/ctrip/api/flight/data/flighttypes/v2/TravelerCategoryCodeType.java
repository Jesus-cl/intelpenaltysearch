// Generated by eBay Common SDK Platform
package ctrip.api.flight.data.flighttypes.v2;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * 乘客类型：成人/儿童/婴儿（不占座）/婴儿（占座）/老人
 */
@XmlType(name = "TravelerCategoryCodeType")
@XmlEnum
@SuppressWarnings("all")
public enum TravelerCategoryCodeType {

    @XmlEnumValue("Adult")
    Adult(0, "Adult"),

    @XmlEnumValue("Child")
    Child(1, "Child"),

    @XmlEnumValue("InfantInLap")
    InfantInLap(2, "InfantInLap"),

    @XmlEnumValue("InfantInSeat")
    InfantInSeat(3, "InfantInSeat"),

    @XmlEnumValue("Senior")
    Senior(4, "Senior");

    private final int intValue;
    private final String value;

    TravelerCategoryCodeType(int intValue, String value) {
        this.intValue = intValue;
        this.value = value;
    }

    public int getValue() {
        return intValue;
    }

    @JsonValue
    public String value() {
        return value;
    }

    @JsonCreator
    public static TravelerCategoryCodeType fromValue(String v) {
        for (TravelerCategoryCodeType e: TravelerCategoryCodeType.values()) {
            if (e.value.equals(v)) {
                return e;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static TravelerCategoryCodeType findByValue(int value) {
        switch (value) {
            case 0:
                return Adult;
            case 1:
                return Child;
            case 2:
                return InfantInLap;
            case 3:
                return InfantInSeat;
            case 4:
                return Senior;
            default:
                return null;
        }
    }
}