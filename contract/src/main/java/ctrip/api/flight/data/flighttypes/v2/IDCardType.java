// Generated by eBay Common SDK Platform
package ctrip.api.flight.data.flighttypes.v2;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * 身份证件类型
 */
@XmlType(name = "IDCardType")
@XmlEnum
@SuppressWarnings("all")
public enum IDCardType {

    @XmlEnumValue("NA")
    NA(0, "NA"),

    @XmlEnumValue("BRD")
    BRD(1, "BRD"),

    @XmlEnumValue("ID")
    ID(2, "ID"),

    @XmlEnumValue("PASSPORT")
    PASSPORT(3, "PASSPORT"),

    @XmlEnumValue("STC")
    STC(4, "STC"),

    @XmlEnumValue("MTC")
    MTC(5, "MTC"),

    @XmlEnumValue("DRLC")
    DRLC(6, "DRLC"),

    @XmlEnumValue("RP")
    RP(7, "RP"),

    @XmlEnumValue("MTP")
    MTP(8, "MTP"),

    @XmlEnumValue("HMP")
    HMP(9, "HMP"),

    @XmlEnumValue("ISC")
    ISC(10, "ISC"),

    @XmlEnumValue("PRC")
    PRC(11, "PRC"),

    @XmlEnumValue("TC")
    TC(12, "TC"),

    @XmlEnumValue("TP")
    TP(13, "TP"),

    @XmlEnumValue("SOC")
    SOC(14, "SOC"),

    @XmlEnumValue("TID")
    TID(15, "TID"),

    @XmlEnumValue("RBT")
    RBT(16, "RBT"),

    @XmlEnumValue("PLC")
    PLC(17, "PLC"),

    @XmlEnumValue("BRC")
    BRC(18, "BRC"),

    @XmlEnumValue("OTHER")
    OTHER(19, "OTHER");

    private final int intValue;
    private final String value;

    IDCardType(int intValue, String value) {
        this.intValue = intValue;
        this.value = value;
    }

    public int getValue() {
        return intValue;
    }

    @JsonValue
    public String value() {
        return value;
    }

    @JsonCreator
    public static IDCardType fromValue(String v) {
        for (IDCardType e: IDCardType.values()) {
            if (e.value.equals(v)) {
                return e;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static IDCardType findByValue(int value) {
        switch (value) {
            case 0:
                return NA;
            case 1:
                return BRD;
            case 2:
                return ID;
            case 3:
                return PASSPORT;
            case 4:
                return STC;
            case 5:
                return MTC;
            case 6:
                return DRLC;
            case 7:
                return RP;
            case 8:
                return MTP;
            case 9:
                return HMP;
            case 10:
                return ISC;
            case 11:
                return PRC;
            case 12:
                return TC;
            case 13:
                return TP;
            case 14:
                return SOC;
            case 15:
                return TID;
            case 16:
                return RBT;
            case 17:
                return PLC;
            case 18:
                return BRC;
            case 19:
                return OTHER;
            default:
                return null;
        }
    }
}