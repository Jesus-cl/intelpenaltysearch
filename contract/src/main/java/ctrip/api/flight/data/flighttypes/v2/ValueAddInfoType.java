/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package ctrip.api.flight.data.flighttypes.v2;

import com.ctriposs.baiji.exception.BaijiRuntimeException;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.schema.Field;
import com.ctriposs.baiji.schema.RecordSchema;
import com.ctriposs.baiji.schema.Schema;
import com.ctriposs.baiji.specific.SpecificRecord;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ValueAddInfoType", propOrder = {
    "segmentSeqID",
    "origDestSeqID",
    "valueAddSalePriceList"
})
@SuppressWarnings("all")
public class ValueAddInfoType implements SpecificRecord {

    private static final long serialVersionUID = 1L;

	public static final Schema SCHEMA = Schema.parse("{\"type\":\"record\",\"name\":\"ValueAddInfoType\",\"namespace\":\"" + ValueAddInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"segmentSeqID\",\"type\":\"int\"},{\"name\":\"origDestSeqID\",\"type\":\"int\"},{\"name\":\"valueAddSalePriceList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ValueAddSalePriceInfoType\",\"namespace\":\"" + ValueAddSalePriceInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"salePrice\",\"type\":[\"string\",\"null\"]},{\"name\":\"bookSalePrice\",\"type\":[\"string\",\"null\"]},{\"name\":\"airportSalePrice\",\"type\":[\"string\",\"null\"]},{\"name\":\"refundFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"weight\",\"type\":\"int\"},{\"name\":\"description\",\"type\":[\"string\",\"null\"]},{\"name\":\"pkgNumber\",\"type\":[\"string\",\"null\"]},{\"name\":\"tag\",\"type\":[\"string\",\"null\"]},{\"name\":\"freeWeight\",\"type\":[\"string\",\"null\"]},{\"name\":\"chargeWeight\",\"type\":[\"string\",\"null\"]},{\"name\":\"agentCode\",\"type\":[\"string\",\"null\"]}]}}}]}");

    @Override
    public Schema getSchema() { return SCHEMA; }

    public ValueAddInfoType(
        int segmentSeqID, 
        int origDestSeqID, 
        List<ValueAddSalePriceInfoType> valueAddSalePriceList) {
        this.segmentSeqID = segmentSeqID;
        this.origDestSeqID = origDestSeqID;
        this.valueAddSalePriceList = valueAddSalePriceList;
    }

    public ValueAddInfoType() {
    }

    @FieldDoc("航段号")
    @JsonProperty("SegmentSeqID")
    @XmlElement(name = "SegmentSeqID")
    private int segmentSeqID;

    @FieldDoc("航程号")
    @JsonProperty("OrigDestSeqID")
    @XmlElement(name = "OrigDestSeqID")
    private int origDestSeqID;

    @FieldDoc("增值服务价格信息")
    @JsonProperty("ValueAddSalePriceList")
    @XmlElement(name = "ValueAddSalePrice")
    @XmlElementWrapper(name = "ValueAddSalePriceList")
    private List<ValueAddSalePriceInfoType> valueAddSalePriceList;

    /**
     * 航段号
     */
    public int getSegmentSeqID() {
        return this.segmentSeqID;
    }

    public void setSegmentSeqID(int segmentSeqID) {
        this.segmentSeqID = segmentSeqID;
    }

    /**
     * 航程号
     */
    public int getOrigDestSeqID() {
        return this.origDestSeqID;
    }

    public void setOrigDestSeqID(int origDestSeqID) {
        this.origDestSeqID = origDestSeqID;
    }

    /**
     * 增值服务价格信息
     */
    public List<ValueAddSalePriceInfoType> getValueAddSalePriceList() {
        return this.valueAddSalePriceList;
    }

    public void setValueAddSalePriceList(List<ValueAddSalePriceInfoType> valueAddSalePriceList) {
        this.valueAddSalePriceList = valueAddSalePriceList;
    }

    // Used by DatumWriter. Applications should not call.
    @Override
    public Object get(int fieldPos) {
        switch(fieldPos) {
            case 0: return (int) this.segmentSeqID;
            case 1: return (int) this.origDestSeqID;
            case 2: return (List<ValueAddSalePriceInfoType>) this.valueAddSalePriceList;
            default: throw new BaijiRuntimeException("Bad index " + fieldPos + " in get()");
        }
    }

    // Used by DatumReader. Applications should not call.
    @Override
    public void put(int fieldPos, Object fieldValue) {
        switch(fieldPos) {
            case 0: this.segmentSeqID = (int)fieldValue; break;
            case 1: this.origDestSeqID = (int)fieldValue; break;
            case 2: this.valueAddSalePriceList = (List<ValueAddSalePriceInfoType>)fieldValue; break;
            default: throw new BaijiRuntimeException("Bad index " + fieldPos + " in put()");
        }
    }

    @Override
    public Object get(String fieldName) {
        Schema schema = getSchema();
        if (!(schema instanceof RecordSchema)) {
            return null;
        }
        Field field = ((RecordSchema) schema).getField(fieldName);
        return field != null ? get(field.getPos()) : null;
    }

    @Override
    public void put(String fieldName, Object fieldValue) {
        Schema schema = getSchema();
        if (!(schema instanceof RecordSchema)) {
            return;
        }
        Field field = ((RecordSchema) schema).getField(fieldName);
        if (field != null) {
            put(field.getPos(), fieldValue);
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final ValueAddInfoType other = (ValueAddInfoType)obj;
        return
            Objects.equal(this.segmentSeqID, other.segmentSeqID) && 
            Objects.equal(this.origDestSeqID, other.origDestSeqID) && 
            Objects.equal(this.valueAddSalePriceList, other.valueAddSalePriceList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.segmentSeqID);
        result = 31 * result + Objects.hashCode(this.origDestSeqID);
        result = 31 * result + Objects.hashCode(this.valueAddSalePriceList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("segmentSeqID", segmentSeqID)
            .add("origDestSeqID", origDestSeqID)
            .add("valueAddSalePriceList", valueAddSalePriceList)
            .toString();
    }
}