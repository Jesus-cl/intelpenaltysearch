// Generated by eBay Common SDK Platform
package ctrip.api.flight.data.flighttypes.v2;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * 配送方式
 */
@XmlType(name = "DeliveryTypeType")
@XmlEnum
@SuppressWarnings("all")
public enum DeliveryTypeType {

    @XmlEnumValue("AIR")
    AIR(0, "AIR"),

    @XmlEnumValue("EMS")
    EMS(1, "EMS"),

    @XmlEnumValue("GET")
    GET(2, "GET"),

    @XmlEnumValue("PJN")
    PJN(3, "PJN"),

    @XmlEnumValue("PJS")
    PJS(4, "PJS"),

    @XmlEnumValue("SND")
    SND(5, "SND"),

    @XmlEnumValue("CND")
    CND(6, "CND"),

    @XmlEnumValue("CJS")
    CJS(7, "CJS");

    private final int intValue;
    private final String value;

    DeliveryTypeType(int intValue, String value) {
        this.intValue = intValue;
        this.value = value;
    }

    public int getValue() {
        return intValue;
    }

    @JsonValue
    public String value() {
        return value;
    }

    @JsonCreator
    public static DeliveryTypeType fromValue(String v) {
        for (DeliveryTypeType e: DeliveryTypeType.values()) {
            if (e.value.equals(v)) {
                return e;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static DeliveryTypeType findByValue(int value) {
        switch (value) {
            case 0:
                return AIR;
            case 1:
                return EMS;
            case 2:
                return GET;
            case 3:
                return PJN;
            case 4:
                return PJS;
            case 5:
                return SND;
            case 6:
                return CND;
            case 7:
                return CJS;
            default:
                return null;
        }
    }
}