/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package ctrip.api.flight.data.flighttypes.v2;

import com.ctriposs.baiji.exception.BaijiRuntimeException;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.schema.Field;
import com.ctriposs.baiji.schema.RecordSchema;
import com.ctriposs.baiji.schema.Schema;
import com.ctriposs.baiji.specific.SpecificRecord;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ProductDetailType", propOrder = {
    "channel",
    "priceInfoList",
    "validatingCarrier",
    "validatingCarrierName",
    "productCategory",
    "subProductCategory",
    "invoiceType",
    "penaltiesKey",
    "travelerEligibility",
    "priceUnit",
    "tagList"
})
@SuppressWarnings("all")
public class ProductDetailType implements SpecificRecord {

    private static final long serialVersionUID = 1L;

	public static final Schema SCHEMA = Schema.parse("{\"type\":\"record\",\"name\":\"ProductDetailType\",\"namespace\":\"" + ProductDetailType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"channel\",\"type\":[\"string\",\"null\"]},{\"name\":\"priceInfoList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PriceInfoType\",\"namespace\":\"" + PriceInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"travelerCategoryCode\",\"type\":[{\"type\":\"enum\",\"name\":\"TravelerCategoryCodeType\",\"namespace\":\"" + TravelerCategoryCodeType.class.getPackage().getName() + "\",\"symbols\":[\"Adult\",\"Child\",\"InfantInLap\",\"InfantInSeat\",\"Senior\"]},\"null\"]},{\"name\":\"agency\",\"type\":{\"type\":\"record\",\"name\":\"AgencyType\",\"namespace\":\"" + AgencyType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"agencyID\",\"type\":\"int\"},{\"name\":\"agencyCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"cityID\",\"type\":\"int\"},{\"name\":\"cityCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"agencyName\",\"type\":[\"string\",\"null\"]},{\"name\":\"officialName\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"ticketRemark\",\"type\":[\"string\",\"null\"]},{\"name\":\"ticketingTimeLimit\",\"type\":{\"type\":\"record\",\"name\":\"TicketingTimeLimitType\",\"namespace\":\"" + TicketingTimeLimitType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"timeLimitType\",\"type\":\"int\"},{\"name\":\"limitTime\",\"type\":\"int\"}]}},{\"name\":\"passengerRestriction\",\"type\":{\"type\":\"record\",\"name\":\"PassengerRestrictionType\",\"namespace\":\"" + PassengerRestrictionType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"minPassengerCount\",\"type\":\"int\"},{\"name\":\"maxPassengerCount\",\"type\":\"int\"},{\"name\":\"nationalityInclude\",\"type\":[\"string\",\"null\"]},{\"name\":\"nationalityExclude\",\"type\":[\"string\",\"null\"]},{\"name\":\"nationalityIncludeCN\",\"type\":[\"string\",\"null\"]},{\"name\":\"nationalityExcludeCN\",\"type\":[\"string\",\"null\"]},{\"name\":\"maxAgeLimitition\",\"type\":\"int\"},{\"name\":\"minAgeLimitition\",\"type\":\"int\"}]}},{\"name\":\"priceDetail\",\"type\":{\"type\":\"record\",\"name\":\"PriceDetailType\",\"namespace\":\"" + PriceDetailType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"currency\",\"type\":[\"string\",\"null\"]},{\"name\":\"salePrice\",\"type\":[\"string\",\"null\"]},{\"name\":\"tax\",\"type\":[\"string\",\"null\"]},{\"name\":\"publishPrice\",\"type\":[\"string\",\"null\"]},{\"name\":\"accountPrice\",\"type\":[\"string\",\"null\"]},{\"name\":\"netPrice\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"originalPriceDetail\",\"type\":\"PriceDetailType\"},{\"name\":\"expression\",\"type\":[\"string\",\"null\"]},{\"name\":\"exchange\",\"type\":[\"string\",\"null\"]},{\"name\":\"officeNo\",\"type\":[\"string\",\"null\"]},{\"name\":\"tagList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TagType\",\"namespace\":\"" + TagType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"key\",\"type\":[\"string\",\"null\"]},{\"name\":\"value\",\"type\":[\"string\",\"null\"]}]}}},{\"name\":\"commitionSource\",\"type\":\"int\"},{\"name\":\"discountPrice\",\"type\":[\"string\",\"null\"]}]}}},{\"name\":\"validatingCarrier\",\"type\":[\"string\",\"null\"]},{\"name\":\"validatingCarrierName\",\"type\":[\"string\",\"null\"]},{\"name\":\"productCategory\",\"type\":[{\"type\":\"enum\",\"name\":\"ProductCategoryType\",\"namespace\":\"" + ProductCategoryType.class.getPackage().getName() + "\",\"symbols\":[\"None\",\"Exclusive\",\"Prioritizing\",\"LowestPrice\",\"FlagShipStore\",\"CombinedProduct\",\"Cloud\"]},\"null\"]},{\"name\":\"subProductCategory\",\"type\":[{\"type\":\"enum\",\"name\":\"SubProductCategoryType\",\"namespace\":\"" + SubProductCategoryType.class.getPackage().getName() + "\",\"symbols\":[\"None\",\"Owner\",\"Platforms\",\"Overseas\",\"PlatformsPrivate\",\"OverseasPrivate\",\"Pseat\",\"RTSeat\",\"CSD\",\"CSDPrivate\",\"CSDPublish\",\"Airline\",\"LowestPrice\",\"KWPrivate\",\"OSeat\"]},\"null\"]},{\"name\":\"invoiceType\",\"type\":[\"string\",\"null\"]},{\"name\":\"penaltiesKey\",\"type\":[\"string\",\"null\"]},{\"name\":\"travelerEligibility\",\"type\":[\"string\",\"null\"]},{\"name\":\"priceUnit\",\"type\":{\"type\":\"record\",\"name\":\"PriceUnitType\",\"namespace\":\"" + PriceUnitType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"fareList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FareType\",\"namespace\":\"" + FareType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"fcSequence\",\"type\":\"int\"},{\"name\":\"fareInfo\",\"type\":{\"type\":\"record\",\"name\":\"FareInfoType\",\"namespace\":\"" + FareInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"fareID\",\"type\":[\"string\",\"null\"]},{\"name\":\"fareBasis\",\"type\":[\"string\",\"null\"]},{\"name\":\"fareSource\",\"type\":\"int\"},{\"name\":\"ownerCarrier\",\"type\":[\"string\",\"null\"]},{\"name\":\"fareType\",\"type\":\"int\"},{\"name\":\"accountCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"ticketDesignator\",\"type\":[\"string\",\"null\"]},{\"name\":\"tourCode\",\"type\":[\"string\",\"null\"]}]}}]}}},{\"name\":\"carrierTicketingDeadline\",\"type\":[\"datetime\",\"null\"]},{\"name\":\"qteCmdPostfix\",\"type\":[\"string\",\"null\"]},{\"name\":\"needQTE\",\"type\":\"boolean\"},{\"name\":\"needPnr\",\"type\":\"boolean\"},{\"name\":\"textRemarkId\",\"type\":\"int\"}]}},{\"name\":\"tagList\",\"type\":{\"type\":\"array\",\"items\":\"TagType\"}}]}");

    @Override
    public Schema getSchema() { return SCHEMA; }

    public ProductDetailType(
        String channel, 
        List<PriceInfoType> priceInfoList, 
        String validatingCarrier, 
        String validatingCarrierName, 
        ProductCategoryType productCategory, 
        SubProductCategoryType subProductCategory, 
        String invoiceType, 
        String penaltiesKey, 
        String travelerEligibility, 
        PriceUnitType priceUnit, 
        List<TagType> tagList) {
        this.channel = channel;
        this.priceInfoList = priceInfoList;
        this.validatingCarrier = validatingCarrier;
        this.validatingCarrierName = validatingCarrierName;
        this.productCategory = productCategory;
        this.subProductCategory = subProductCategory;
        this.invoiceType = invoiceType;
        this.penaltiesKey = penaltiesKey;
        this.travelerEligibility = travelerEligibility;
        this.priceUnit = priceUnit;
        this.tagList = tagList;
    }

    public ProductDetailType() {
    }

    @JsonProperty("Channel")
    @XmlElement(name = "Channel")
    private String channel;

    @FieldDoc("价格信息")
    @JsonProperty("PriceInfoList")
    @XmlElement(name = "PriceInfo")
    @XmlElementWrapper(name = "PriceInfoList")
    private List<PriceInfoType> priceInfoList;

    @JsonProperty("ValidatingCarrier")
    @XmlElement(name = "ValidatingCarrier")
    private String validatingCarrier;

    @JsonProperty("ValidatingCarrierName")
    @XmlElement(name = "ValidatingCarrierName")
    private String validatingCarrierName;

    @FieldDoc("产品类型")
    @JsonProperty("ProductCategory")
    @XmlElement(name = "ProductCategory")
    private ProductCategoryType productCategory;

    @FieldDoc("子产品类型")
    @JsonProperty("SubProductCategory")
    @XmlElement(name = "SubProductCategory")
    private SubProductCategoryType subProductCategory;

    @JsonProperty("InvoiceType")
    @XmlElement(name = "InvoiceType")
    private String invoiceType;

    @FieldDoc("退改签Key")
    @JsonProperty("PenaltiesKey")
    @XmlElement(name = "PenaltiesKey")
    private String penaltiesKey;

    @JsonProperty("TravelerEligibility")
    @XmlElement(name = "TravelerEligibility")
    private String travelerEligibility;

    @JsonProperty("PriceUnit")
    @XmlElement(name = "PriceUnit")
    private PriceUnitType priceUnit;

    @JsonProperty("TagList")
    @XmlElement(name = "Tag")
    @XmlElementWrapper(name = "TagList")
    private List<TagType> tagList;

    public String getChannel() {
        return this.channel;
    }

    public void setChannel(String channel) {
        this.channel = channel;
    }

    /**
     * 价格信息
     */
    public List<PriceInfoType> getPriceInfoList() {
        return this.priceInfoList;
    }

    public void setPriceInfoList(List<PriceInfoType> priceInfoList) {
        this.priceInfoList = priceInfoList;
    }

    public String getValidatingCarrier() {
        return this.validatingCarrier;
    }

    public void setValidatingCarrier(String validatingCarrier) {
        this.validatingCarrier = validatingCarrier;
    }

    public String getValidatingCarrierName() {
        return this.validatingCarrierName;
    }

    public void setValidatingCarrierName(String validatingCarrierName) {
        this.validatingCarrierName = validatingCarrierName;
    }

    /**
     * 产品类型
     */
    public ProductCategoryType getProductCategory() {
        return this.productCategory;
    }

    public void setProductCategory(ProductCategoryType productCategory) {
        this.productCategory = productCategory;
    }

    /**
     * 子产品类型
     */
    public SubProductCategoryType getSubProductCategory() {
        return this.subProductCategory;
    }

    public void setSubProductCategory(SubProductCategoryType subProductCategory) {
        this.subProductCategory = subProductCategory;
    }

    public String getInvoiceType() {
        return this.invoiceType;
    }

    public void setInvoiceType(String invoiceType) {
        this.invoiceType = invoiceType;
    }

    /**
     * 退改签Key
     */
    public String getPenaltiesKey() {
        return this.penaltiesKey;
    }

    public void setPenaltiesKey(String penaltiesKey) {
        this.penaltiesKey = penaltiesKey;
    }

    public String getTravelerEligibility() {
        return this.travelerEligibility;
    }

    public void setTravelerEligibility(String travelerEligibility) {
        this.travelerEligibility = travelerEligibility;
    }

    public PriceUnitType getPriceUnit() {
        return this.priceUnit;
    }

    public void setPriceUnit(PriceUnitType priceUnit) {
        this.priceUnit = priceUnit;
    }

    public List<TagType> getTagList() {
        return this.tagList;
    }

    public void setTagList(List<TagType> tagList) {
        this.tagList = tagList;
    }

    // Used by DatumWriter. Applications should not call.
    @Override
    public Object get(int fieldPos) {
        switch(fieldPos) {
            case 0: return (String) this.channel;
            case 1: return (List<PriceInfoType>) this.priceInfoList;
            case 2: return (String) this.validatingCarrier;
            case 3: return (String) this.validatingCarrierName;
            case 4: return (ProductCategoryType) this.productCategory;
            case 5: return (SubProductCategoryType) this.subProductCategory;
            case 6: return (String) this.invoiceType;
            case 7: return (String) this.penaltiesKey;
            case 8: return (String) this.travelerEligibility;
            case 9: return (PriceUnitType) this.priceUnit;
            case 10: return (List<TagType>) this.tagList;
            default: throw new BaijiRuntimeException("Bad index " + fieldPos + " in get()");
        }
    }

    // Used by DatumReader. Applications should not call.
    @Override
    public void put(int fieldPos, Object fieldValue) {
        switch(fieldPos) {
            case 0: this.channel = (String)fieldValue; break;
            case 1: this.priceInfoList = (List<PriceInfoType>)fieldValue; break;
            case 2: this.validatingCarrier = (String)fieldValue; break;
            case 3: this.validatingCarrierName = (String)fieldValue; break;
            case 4: this.productCategory = (ProductCategoryType)fieldValue; break;
            case 5: this.subProductCategory = (SubProductCategoryType)fieldValue; break;
            case 6: this.invoiceType = (String)fieldValue; break;
            case 7: this.penaltiesKey = (String)fieldValue; break;
            case 8: this.travelerEligibility = (String)fieldValue; break;
            case 9: this.priceUnit = (PriceUnitType)fieldValue; break;
            case 10: this.tagList = (List<TagType>)fieldValue; break;
            default: throw new BaijiRuntimeException("Bad index " + fieldPos + " in put()");
        }
    }

    @Override
    public Object get(String fieldName) {
        Schema schema = getSchema();
        if (!(schema instanceof RecordSchema)) {
            return null;
        }
        Field field = ((RecordSchema) schema).getField(fieldName);
        return field != null ? get(field.getPos()) : null;
    }

    @Override
    public void put(String fieldName, Object fieldValue) {
        Schema schema = getSchema();
        if (!(schema instanceof RecordSchema)) {
            return;
        }
        Field field = ((RecordSchema) schema).getField(fieldName);
        if (field != null) {
            put(field.getPos(), fieldValue);
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final ProductDetailType other = (ProductDetailType)obj;
        return
            Objects.equal(this.channel, other.channel) && 
            Objects.equal(this.priceInfoList, other.priceInfoList) && 
            Objects.equal(this.validatingCarrier, other.validatingCarrier) && 
            Objects.equal(this.validatingCarrierName, other.validatingCarrierName) && 
            Objects.equal(this.productCategory, other.productCategory) && 
            Objects.equal(this.subProductCategory, other.subProductCategory) && 
            Objects.equal(this.invoiceType, other.invoiceType) && 
            Objects.equal(this.penaltiesKey, other.penaltiesKey) && 
            Objects.equal(this.travelerEligibility, other.travelerEligibility) && 
            Objects.equal(this.priceUnit, other.priceUnit) && 
            Objects.equal(this.tagList, other.tagList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.channel);
        result = 31 * result + Objects.hashCode(this.priceInfoList);
        result = 31 * result + Objects.hashCode(this.validatingCarrier);
        result = 31 * result + Objects.hashCode(this.validatingCarrierName);
        result = 31 * result + Objects.hashCode(this.productCategory);
        result = 31 * result + Objects.hashCode(this.subProductCategory);
        result = 31 * result + Objects.hashCode(this.invoiceType);
        result = 31 * result + Objects.hashCode(this.penaltiesKey);
        result = 31 * result + Objects.hashCode(this.travelerEligibility);
        result = 31 * result + Objects.hashCode(this.priceUnit);
        result = 31 * result + Objects.hashCode(this.tagList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("channel", channel)
            .add("priceInfoList", priceInfoList)
            .add("validatingCarrier", validatingCarrier)
            .add("validatingCarrierName", validatingCarrierName)
            .add("productCategory", productCategory)
            .add("subProductCategory", subProductCategory)
            .add("invoiceType", invoiceType)
            .add("penaltiesKey", penaltiesKey)
            .add("travelerEligibility", travelerEligibility)
            .add("priceUnit", priceUnit)
            .add("tagList", tagList)
            .toString();
    }
}