/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package ctrip.api.flight.message.product.intlpenaltysearch.v1;

import com.ctriposs.baiji.exception.BaijiRuntimeException;
import com.ctriposs.baiji.rpc.common.HasResponseStatus;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.rpc.common.types.*;
import com.ctriposs.baiji.rpc.common.types.ResponseStatusType;
import com.ctriposs.baiji.schema.Field;
import com.ctriposs.baiji.schema.RecordSchema;
import com.ctriposs.baiji.schema.Schema;
import com.ctriposs.baiji.specific.SpecificRecord;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import ctrip.api.flight.data.flighttypes.v2.*;
import ctrip.api.flight.data.messagetypes.v2.*;
import ctrip.api.flight.data.messagetypes.v2.ResponseHeaderType;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 
 *         各个前端请求时只返回PenaltyFormatResultList！下单请求时同时返回PenaltyFormatResultList和PenaltyTextResultList。
 *         特殊情况：BookingChannel是“航司直连/TF”时只返回PenaltyTextResultList！
 *       
 */
@DtoDoc("各个前端请求时只返回PenaltyFormatResultList！下单请求时同时返回PenaltyFormatResultList和PenaltyTextResultList。" +
        "特殊情况：BookingChannel是“航司直连/TF”时只返回PenaltyTextResultList！")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "IntlPenaltySearchAsyncResponse", namespace = "urn:ctrip:api:flight:message:Product:IntlPenaltySearch:v1")
@XmlType(name = "IntlPenaltySearchResponseType", propOrder = {
    "responseStatus",
    "responseHeader",
    "penaltyFormatResultList",
    "penaltyTextResultList"
})
@SuppressWarnings("all")
public class IntlPenaltySearchResponseType implements HasResponseStatus, SpecificRecord {

    private static final long serialVersionUID = 1L;

	public static final Schema SCHEMA = Schema.parse("{\"type\":\"record\",\"name\":\"IntlPenaltySearchResponseType\",\"namespace\":\"" + IntlPenaltySearchResponseType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"ResponseStatus\",\"type\":{\"type\":\"record\",\"name\":\"ResponseStatusType\",\"namespace\":\"" + ResponseStatusType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"Timestamp\",\"type\":[\"datetime\",\"null\"]},{\"name\":\"Ack\",\"type\":[{\"type\":\"enum\",\"name\":\"AckCodeType\",\"namespace\":\"" + AckCodeType.class.getPackage().getName() + "\",\"symbols\":[\"Success\",\"Failure\",\"Warning\",\"PartialFailure\"]},\"null\"]},{\"name\":\"Errors\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ErrorDataType\",\"namespace\":\"" + ErrorDataType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"Message\",\"type\":[\"string\",\"null\"]},{\"name\":\"ErrorCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"StackTrace\",\"type\":[\"string\",\"null\"]},{\"name\":\"SeverityCode\",\"type\":[{\"type\":\"enum\",\"name\":\"SeverityCodeType\",\"namespace\":\"" + SeverityCodeType.class.getPackage().getName() + "\",\"symbols\":[\"Error\",\"Warning\"]},\"null\"]},{\"name\":\"ErrorFields\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ErrorFieldType\",\"namespace\":\"" + ErrorFieldType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"FieldName\",\"type\":[\"string\",\"null\"]},{\"name\":\"ErrorCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"Message\",\"type\":[\"string\",\"null\"]}]}}},{\"name\":\"ErrorClassification\",\"type\":[{\"type\":\"enum\",\"name\":\"ErrorClassificationCodeType\",\"namespace\":\"" + ErrorClassificationCodeType.class.getPackage().getName() + "\",\"symbols\":[\"ServiceError\",\"ValidationError\",\"FrameworkError\",\"SLAError\"]},\"null\"]}]}}},{\"name\":\"Build\",\"type\":[\"string\",\"null\"]},{\"name\":\"Version\",\"type\":[\"string\",\"null\"]},{\"name\":\"Extension\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ExtensionType\",\"namespace\":\"" + ExtensionType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"Id\",\"type\":[\"string\",\"null\"]},{\"name\":\"Version\",\"type\":[\"string\",\"null\"]},{\"name\":\"ContentType\",\"type\":[\"string\",\"null\"]},{\"name\":\"Value\",\"type\":[\"string\",\"null\"]}]}}}]}},{\"name\":\"responseHeader\",\"type\":{\"type\":\"record\",\"name\":\"ResponseHeaderType\",\"namespace\":\"" + ResponseHeaderType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"messageHeader\",\"type\":{\"type\":\"record\",\"name\":\"MessageHeaderType\",\"namespace\":\"" + MessageHeaderType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"sourceAppID\",\"type\":[\"string\",\"null\"]},{\"name\":\"sessionID\",\"type\":[\"string\",\"null\"]},{\"name\":\"transactionID\",\"type\":[\"string\",\"null\"]},{\"name\":\"channelID\",\"type\":[{\"type\":\"enum\",\"name\":\"ChannelIDType\",\"namespace\":\"" + ChannelIDType.class.getPackage().getName() + "\",\"symbols\":[\"FlightOnline\",\"FlightOffline\",\"FlightExternal\",\"FlightIntlOnline\",\"FlightIntlOffline\",\"FltIntlExternal\",\"FlightIntlOnlineSEO\",\"Corporation\",\"CorpOffline\",\"CorpMobile\",\"Vacation\",\"VacationGroup\",\"RestrictedVacation\",\"FitTravel\",\"Mobile\",\"MobileH5\",\"Hotel\",\"AirHotel\",\"AirHotelIntl\",\"AirHotelIntlEx\",\"AirHotelPackage\",\"EnglishSite\",\"HighRail\",\"Affiliate\",\"Luxury\",\"Customer\",\"Mice\",\"Community\",\"EzTravel\",\"Wingon\",\"Distribution\",\"BIChannel\",\"Finance\",\"ConfirmCustomer\",\"HKSite\",\"KRSite\",\"JPSite\",\"SGSite\",\"TWSite\",\"THSite\",\"Qunar\"]},\"null\"]},{\"name\":\"subChannelID\",\"type\":[\"int\",\"null\"]},{\"name\":\"customerID\",\"type\":[\"string\",\"null\"]},{\"name\":\"agentID\",\"type\":[\"string\",\"null\"]},{\"name\":\"clientIP\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"sourceAppID\",\"type\":[\"string\",\"null\"]},{\"name\":\"sessionID\",\"type\":[\"string\",\"null\"]},{\"name\":\"transactionID\",\"type\":[\"string\",\"null\"]},{\"name\":\"channelID\",\"type\":[\"ChannelIDType\",\"null\"]},{\"name\":\"subChannelID\",\"type\":[\"int\",\"null\"]},{\"name\":\"customerID\",\"type\":[\"string\",\"null\"]},{\"name\":\"agentID\",\"type\":[\"string\",\"null\"]},{\"name\":\"clientIP\",\"type\":[\"string\",\"null\"]},{\"name\":\"serverIP\",\"type\":[\"string\",\"null\"]},{\"name\":\"returnCode\",\"type\":\"int\"},{\"name\":\"diagOutput\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"penaltyFormatResultList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PenaltyFormatResultType\",\"namespace\":\"" + PenaltyFormatResultType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"refundInfo\",\"type\":{\"type\":\"record\",\"name\":\"PenaltyInfoType\",\"namespace\":\"" + PenaltyInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"penaltyFeeList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PenaltyFeeType\",\"namespace\":\"" + PenaltyFeeType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"fcGroupID\",\"type\":\"int\"},{\"name\":\"flag\",\"type\":[{\"type\":\"enum\",\"name\":\"TicketAlterType\",\"namespace\":\"" + TicketAlterType.class.getPackage().getName() + "\",\"symbols\":[\"Prohibition\",\"Allows\",\"Regulation\",\"Supplement\"]},\"null\"]},{\"name\":\"settleRMBFee\",\"type\":{\"type\":\"record\",\"name\":\"FeeType\",\"namespace\":\"" + FeeType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"adultFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"childFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"infantFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"currency\",\"type\":[\"string\",\"null\"]},{\"name\":\"exchangeRate\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"settleForeignFee\",\"type\":\"FeeType\"},{\"name\":\"noShowCondition\",\"type\":[\"string\",\"null\"]},{\"name\":\"noShowFlag\",\"type\":[\"TicketAlterType\",\"null\"]},{\"name\":\"noShowSettleRMBFee\",\"type\":\"FeeType\"},{\"name\":\"noShowSettleForeignFee\",\"type\":\"FeeType\"}]}}},{\"name\":\"remarkText\",\"type\":{\"type\":\"record\",\"name\":\"RemarkTextType\",\"namespace\":\"" + RemarkTextType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"textCN\",\"type\":[\"string\",\"null\"]},{\"name\":\"textEN\",\"type\":[\"string\",\"null\"]}]}}]}},{\"name\":\"pennyRefundInfo\",\"type\":{\"type\":\"record\",\"name\":\"PennyRefundInfoType\",\"namespace\":\"" + PennyRefundInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"pennyRefundFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"currency\",\"type\":[\"string\",\"null\"]},{\"name\":\"pennyRefFeeRMB\",\"type\":{\"type\":\"record\",\"name\":\"PennyRefundDetailType\",\"namespace\":\"" + PennyRefundDetailType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"currency\",\"type\":[\"string\",\"null\"]},{\"name\":\"feeByCtrip\",\"type\":[\"string\",\"null\"]},{\"name\":\"feeByCarrier\",\"type\":[\"string\",\"null\"]},{\"name\":\"feeByConsolidator\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"pennyRefFeeForeign\",\"type\":\"PennyRefundDetailType\"}]}},{\"name\":\"revalidationInfo\",\"type\":\"PenaltyInfoType\"},{\"name\":\"reissueInfo\",\"type\":\"PenaltyInfoType\"},{\"name\":\"strictRevReiInfo\",\"type\":\"PenaltyInfoType\"},{\"name\":\"noteText\",\"type\":\"RemarkTextType\"},{\"name\":\"firstTimeFreeRevRei\",\"type\":\"int\"},{\"name\":\"ptcmd\",\"type\":[\"string\",\"null\"]},{\"name\":\"serviceFeeInfo\",\"type\":{\"type\":\"record\",\"name\":\"BaseFeeInfoType\",\"namespace\":\"" + BaseFeeInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"revalidationFeeDetail\",\"type\":{\"type\":\"record\",\"name\":\"ExtraFeeDetail\",\"namespace\":\"" + ExtraFeeDetail.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"carrierFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"ctripFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"consolidatorFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"displayType\",\"type\":\"int\"}]}},{\"name\":\"exchangeFeeDetail\",\"type\":\"ExtraFeeDetail\"},{\"name\":\"refundFeeDetail\",\"type\":\"ExtraFeeDetail\"},{\"name\":\"strictRevReiFeeDetail\",\"type\":\"ExtraFeeDetail\"},{\"name\":\"currencyInfo\",\"type\":{\"type\":\"record\",\"name\":\"CurrencyInfoType\",\"namespace\":\"" + CurrencyInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"currency\",\"type\":[\"string\",\"null\"]},{\"name\":\"exchangeRate\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"taxRefundFeeDetail\",\"type\":\"ExtraFeeDetail\"}]}},{\"name\":\"bookingChannel\",\"type\":[\"string\",\"null\"]},{\"name\":\"tagList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TagType\",\"namespace\":\"" + TagType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"key\",\"type\":[\"string\",\"null\"]},{\"name\":\"value\",\"type\":[\"string\",\"null\"]}]}}},{\"name\":\"taxFeeInfo\",\"type\":{\"type\":\"record\",\"name\":\"TaxFeeInfoType\",\"namespace\":\"" + TaxFeeInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"taxFeeDetailRMB\",\"type\":{\"type\":\"record\",\"name\":\"TaxFeeDetailType\",\"namespace\":\"" + TaxFeeDetailType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"adultTaxFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"childTaxFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"infantTaxFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"currencyInfo\",\"type\":\"" + CurrencyInfoType.class.getName() + "\"}]}},{\"name\":\"taxFeeDetailForeign\",\"type\":\"TaxFeeDetailType\"},{\"name\":\"refundTaxServiceFee\",\"type\":{\"type\":\"record\",\"name\":\"FeeInfoType\",\"namespace\":\"" + FeeInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"fee\",\"type\":[\"string\",\"null\"]},{\"name\":\"currencyInfo\",\"type\":\"" + CurrencyInfoType.class.getName() + "\"}]}},{\"name\":\"taxType\",\"type\":[\"string\",\"null\"]},{\"name\":\"taxCode\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"taxFeeDetailInfoList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TaxFeeDetailInfoType\",\"namespace\":\"" + TaxFeeDetailInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"passengerType\",\"type\":[\"string\",\"null\"]},{\"name\":\"fuelDetailTypeRMB\",\"type\":{\"type\":\"record\",\"name\":\"TaxDetailType\",\"namespace\":\"" + TaxDetailType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"totalAmount\",\"type\":[\"string\",\"null\"]},{\"name\":\"currencyType\",\"type\":[\"string\",\"null\"]},{\"name\":\"taxItemList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TaxItemType\",\"namespace\":\"" + TaxItemType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"taxItemName\",\"type\":[\"string\",\"null\"]},{\"name\":\"taxItemAmount\",\"type\":[\"string\",\"null\"]}]}}}]}},{\"name\":\"fuelDetailTypeForeign\",\"type\":\"TaxDetailType\"},{\"name\":\"taxDetailTypeRMB\",\"type\":\"TaxDetailType\"},{\"name\":\"taxDetailTypeForeign\",\"type\":\"TaxDetailType\"}]}}}]}}},{\"name\":\"penaltyTextResultList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PenaltyTextResultType\",\"namespace\":\"" + PenaltyTextResultType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"penaltyTextList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PenaltyTextType\",\"namespace\":\"" + PenaltyTextType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"fcGroupID\",\"type\":\"int\"},{\"name\":\"nonRefund\",\"type\":[\"string\",\"null\"]},{\"name\":\"nonReroute\",\"type\":[\"string\",\"null\"]},{\"name\":\"refundRemark\",\"type\":\"RemarkTextType\"},{\"name\":\"rerouteRemark\",\"type\":\"RemarkTextType\"},{\"name\":\"remark\",\"type\":\"RemarkTextType\"}]}}},{\"name\":\"noShowRemark\",\"type\":\"RemarkTextType\"}]}}}]}");

    @Override
    public Schema getSchema() { return SCHEMA; }

    public IntlPenaltySearchResponseType(
        ResponseStatusType responseStatus, 
        ResponseHeaderType responseHeader, 
        List<PenaltyFormatResultType> penaltyFormatResultList, 
        List<PenaltyTextResultType> penaltyTextResultList) {
        this.responseStatus = responseStatus;
        this.responseHeader = responseHeader;
        this.penaltyFormatResultList = penaltyFormatResultList;
        this.penaltyTextResultList = penaltyTextResultList;
    }

    public IntlPenaltySearchResponseType() {
    }

    @JsonProperty("ResponseStatus")
    @XmlElement(name = "ResponseStatus")
    private ResponseStatusType responseStatus;

    @JsonProperty("ResponseHeader")
    @XmlElement(name = "ResponseHeader")
    private ResponseHeaderType responseHeader;

    @FieldDoc("退改签格式化结果")
    @JsonProperty("PenaltyFormatResultList")
    @XmlElement(name = "PenaltyFormatResult")
    @XmlElementWrapper(name = "PenaltyFormatResultList")
    private List<PenaltyFormatResultType> penaltyFormatResultList;

    @FieldDoc("退改签文本型结果，ClientType = 1时才返回。请求报文中ClientType = 0时，除“航司直连/TF”外，不返回该结点。")
    @JsonProperty("PenaltyTextResultList")
    @XmlElement(name = "PenaltyTextResult")
    @XmlElementWrapper(name = "PenaltyTextResultList")
    private List<PenaltyTextResultType> penaltyTextResultList;

    public ResponseStatusType getResponseStatus() {
        return this.responseStatus;
    }

    public void setResponseStatus(ResponseStatusType responseStatus) {
        this.responseStatus = responseStatus;
    }

    public ResponseHeaderType getResponseHeader() {
        return this.responseHeader;
    }

    public void setResponseHeader(ResponseHeaderType responseHeader) {
        this.responseHeader = responseHeader;
    }

    /**
     * 退改签格式化结果
     */
    public List<PenaltyFormatResultType> getPenaltyFormatResultList() {
        return this.penaltyFormatResultList;
    }

    public void setPenaltyFormatResultList(List<PenaltyFormatResultType> penaltyFormatResultList) {
        this.penaltyFormatResultList = penaltyFormatResultList;
    }

    /**
     * 退改签文本型结果，ClientType = 1时才返回。请求报文中ClientType = 0时，除“航司直连/TF”外，不返回该结点。
     */
    public List<PenaltyTextResultType> getPenaltyTextResultList() {
        return this.penaltyTextResultList;
    }

    public void setPenaltyTextResultList(List<PenaltyTextResultType> penaltyTextResultList) {
        this.penaltyTextResultList = penaltyTextResultList;
    }

    // Used by DatumWriter. Applications should not call.
    @Override
    public Object get(int fieldPos) {
        switch(fieldPos) {
            case 0: return (ResponseStatusType) this.responseStatus;
            case 1: return (ResponseHeaderType) this.responseHeader;
            case 2: return (List<PenaltyFormatResultType>) this.penaltyFormatResultList;
            case 3: return (List<PenaltyTextResultType>) this.penaltyTextResultList;
            default: throw new BaijiRuntimeException("Bad index " + fieldPos + " in get()");
        }
    }

    // Used by DatumReader. Applications should not call.
    @Override
    public void put(int fieldPos, Object fieldValue) {
        switch(fieldPos) {
            case 0: this.responseStatus = (ResponseStatusType)fieldValue; break;
            case 1: this.responseHeader = (ResponseHeaderType)fieldValue; break;
            case 2: this.penaltyFormatResultList = (List<PenaltyFormatResultType>)fieldValue; break;
            case 3: this.penaltyTextResultList = (List<PenaltyTextResultType>)fieldValue; break;
            default: throw new BaijiRuntimeException("Bad index " + fieldPos + " in put()");
        }
    }

    @Override
    public Object get(String fieldName) {
        Schema schema = getSchema();
        if (!(schema instanceof RecordSchema)) {
            return null;
        }
        Field field = ((RecordSchema) schema).getField(fieldName);
        return field != null ? get(field.getPos()) : null;
    }

    @Override
    public void put(String fieldName, Object fieldValue) {
        Schema schema = getSchema();
        if (!(schema instanceof RecordSchema)) {
            return;
        }
        Field field = ((RecordSchema) schema).getField(fieldName);
        if (field != null) {
            put(field.getPos(), fieldValue);
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final IntlPenaltySearchResponseType other = (IntlPenaltySearchResponseType)obj;
        return
            Objects.equal(this.responseStatus, other.responseStatus) && 
            Objects.equal(this.responseHeader, other.responseHeader) && 
            Objects.equal(this.penaltyFormatResultList, other.penaltyFormatResultList) && 
            Objects.equal(this.penaltyTextResultList, other.penaltyTextResultList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.responseStatus);
        result = 31 * result + Objects.hashCode(this.responseHeader);
        result = 31 * result + Objects.hashCode(this.penaltyFormatResultList);
        result = 31 * result + Objects.hashCode(this.penaltyTextResultList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("responseStatus", responseStatus)
            .add("responseHeader", responseHeader)
            .add("penaltyFormatResultList", penaltyFormatResultList)
            .add("penaltyTextResultList", penaltyTextResultList)
            .toString();
    }
}