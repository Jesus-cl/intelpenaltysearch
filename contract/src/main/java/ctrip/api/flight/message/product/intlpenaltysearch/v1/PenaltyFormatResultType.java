/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package ctrip.api.flight.message.product.intlpenaltysearch.v1;

import com.ctriposs.baiji.exception.BaijiRuntimeException;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.schema.Field;
import com.ctriposs.baiji.schema.RecordSchema;
import com.ctriposs.baiji.schema.Schema;
import com.ctriposs.baiji.specific.SpecificRecord;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import ctrip.api.flight.data.flighttypes.v2.*;
import ctrip.api.flight.data.flighttypes.v2.BaseFeeInfoType;
import ctrip.api.flight.data.flighttypes.v2.TagType;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PenaltyFormatResultType", propOrder = {
    "refundInfo",
    "pennyRefundInfo",
    "revalidationInfo",
    "reissueInfo",
    "strictRevReiInfo",
    "noteText",
    "firstTimeFreeRevRei",
    "ptcmd",
    "serviceFeeInfo",
    "bookingChannel",
    "tagList",
    "taxFeeInfo",
    "taxFeeDetailInfoList"
})
@SuppressWarnings("all")
public class PenaltyFormatResultType implements SpecificRecord {

    private static final long serialVersionUID = 1L;

	public static final Schema SCHEMA = Schema.parse("{\"type\":\"record\",\"name\":\"PenaltyFormatResultType\",\"namespace\":\"" + PenaltyFormatResultType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"refundInfo\",\"type\":{\"type\":\"record\",\"name\":\"PenaltyInfoType\",\"namespace\":\"" + PenaltyInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"penaltyFeeList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PenaltyFeeType\",\"namespace\":\"" + PenaltyFeeType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"fcGroupID\",\"type\":\"int\"},{\"name\":\"flag\",\"type\":[{\"type\":\"enum\",\"name\":\"TicketAlterType\",\"namespace\":\"" + TicketAlterType.class.getPackage().getName() + "\",\"symbols\":[\"Prohibition\",\"Allows\",\"Regulation\",\"Supplement\"]},\"null\"]},{\"name\":\"settleRMBFee\",\"type\":{\"type\":\"record\",\"name\":\"FeeType\",\"namespace\":\"" + FeeType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"adultFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"childFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"infantFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"currency\",\"type\":[\"string\",\"null\"]},{\"name\":\"exchangeRate\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"settleForeignFee\",\"type\":\"FeeType\"},{\"name\":\"noShowCondition\",\"type\":[\"string\",\"null\"]},{\"name\":\"noShowFlag\",\"type\":[\"TicketAlterType\",\"null\"]},{\"name\":\"noShowSettleRMBFee\",\"type\":\"FeeType\"},{\"name\":\"noShowSettleForeignFee\",\"type\":\"FeeType\"}]}}},{\"name\":\"remarkText\",\"type\":{\"type\":\"record\",\"name\":\"RemarkTextType\",\"namespace\":\"" + RemarkTextType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"textCN\",\"type\":[\"string\",\"null\"]},{\"name\":\"textEN\",\"type\":[\"string\",\"null\"]}]}}]}},{\"name\":\"pennyRefundInfo\",\"type\":{\"type\":\"record\",\"name\":\"PennyRefundInfoType\",\"namespace\":\"" + PennyRefundInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"pennyRefundFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"currency\",\"type\":[\"string\",\"null\"]},{\"name\":\"pennyRefFeeRMB\",\"type\":{\"type\":\"record\",\"name\":\"PennyRefundDetailType\",\"namespace\":\"" + PennyRefundDetailType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"currency\",\"type\":[\"string\",\"null\"]},{\"name\":\"feeByCtrip\",\"type\":[\"string\",\"null\"]},{\"name\":\"feeByCarrier\",\"type\":[\"string\",\"null\"]},{\"name\":\"feeByConsolidator\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"pennyRefFeeForeign\",\"type\":\"PennyRefundDetailType\"}]}},{\"name\":\"revalidationInfo\",\"type\":\"PenaltyInfoType\"},{\"name\":\"reissueInfo\",\"type\":\"PenaltyInfoType\"},{\"name\":\"strictRevReiInfo\",\"type\":\"PenaltyInfoType\"},{\"name\":\"noteText\",\"type\":\"RemarkTextType\"},{\"name\":\"firstTimeFreeRevRei\",\"type\":\"int\"},{\"name\":\"ptcmd\",\"type\":[\"string\",\"null\"]},{\"name\":\"serviceFeeInfo\",\"type\":{\"type\":\"record\",\"name\":\"BaseFeeInfoType\",\"namespace\":\"" + BaseFeeInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"revalidationFeeDetail\",\"type\":{\"type\":\"record\",\"name\":\"ExtraFeeDetail\",\"namespace\":\"" + ExtraFeeDetail.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"carrierFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"ctripFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"consolidatorFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"displayType\",\"type\":\"int\"}]}},{\"name\":\"exchangeFeeDetail\",\"type\":\"ExtraFeeDetail\"},{\"name\":\"refundFeeDetail\",\"type\":\"ExtraFeeDetail\"},{\"name\":\"strictRevReiFeeDetail\",\"type\":\"ExtraFeeDetail\"},{\"name\":\"currencyInfo\",\"type\":{\"type\":\"record\",\"name\":\"CurrencyInfoType\",\"namespace\":\"" + CurrencyInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"currency\",\"type\":[\"string\",\"null\"]},{\"name\":\"exchangeRate\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"taxRefundFeeDetail\",\"type\":\"ExtraFeeDetail\"}]}},{\"name\":\"bookingChannel\",\"type\":[\"string\",\"null\"]},{\"name\":\"tagList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TagType\",\"namespace\":\"" + TagType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"key\",\"type\":[\"string\",\"null\"]},{\"name\":\"value\",\"type\":[\"string\",\"null\"]}]}}},{\"name\":\"taxFeeInfo\",\"type\":{\"type\":\"record\",\"name\":\"TaxFeeInfoType\",\"namespace\":\"" + TaxFeeInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"taxFeeDetailRMB\",\"type\":{\"type\":\"record\",\"name\":\"TaxFeeDetailType\",\"namespace\":\"" + TaxFeeDetailType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"adultTaxFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"childTaxFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"infantTaxFee\",\"type\":[\"string\",\"null\"]},{\"name\":\"currencyInfo\",\"type\":\"" + CurrencyInfoType.class.getName() + "\"}]}},{\"name\":\"taxFeeDetailForeign\",\"type\":\"TaxFeeDetailType\"},{\"name\":\"refundTaxServiceFee\",\"type\":{\"type\":\"record\",\"name\":\"FeeInfoType\",\"namespace\":\"" + FeeInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"fee\",\"type\":[\"string\",\"null\"]},{\"name\":\"currencyInfo\",\"type\":\"" + CurrencyInfoType.class.getName() + "\"}]}},{\"name\":\"taxType\",\"type\":[\"string\",\"null\"]},{\"name\":\"taxCode\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"taxFeeDetailInfoList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TaxFeeDetailInfoType\",\"namespace\":\"" + TaxFeeDetailInfoType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"passengerType\",\"type\":[\"string\",\"null\"]},{\"name\":\"fuelDetailTypeRMB\",\"type\":{\"type\":\"record\",\"name\":\"TaxDetailType\",\"namespace\":\"" + TaxDetailType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"totalAmount\",\"type\":[\"string\",\"null\"]},{\"name\":\"currencyType\",\"type\":[\"string\",\"null\"]},{\"name\":\"taxItemList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TaxItemType\",\"namespace\":\"" + TaxItemType.class.getPackage().getName() + "\",\"fields\":[{\"name\":\"taxItemName\",\"type\":[\"string\",\"null\"]},{\"name\":\"taxItemAmount\",\"type\":[\"string\",\"null\"]}]}}}]}},{\"name\":\"fuelDetailTypeForeign\",\"type\":\"TaxDetailType\"},{\"name\":\"taxDetailTypeRMB\",\"type\":\"TaxDetailType\"},{\"name\":\"taxDetailTypeForeign\",\"type\":\"TaxDetailType\"}]}}}]}");

    @Override
    public Schema getSchema() { return SCHEMA; }

    public PenaltyFormatResultType(
        PenaltyInfoType refundInfo, 
        PennyRefundInfoType pennyRefundInfo, 
        PenaltyInfoType revalidationInfo, 
        PenaltyInfoType reissueInfo, 
        PenaltyInfoType strictRevReiInfo, 
        RemarkTextType noteText, 
        int firstTimeFreeRevRei, 
        String ptcmd, 
        BaseFeeInfoType serviceFeeInfo, 
        String bookingChannel, 
        List<TagType> tagList, 
        TaxFeeInfoType taxFeeInfo, 
        List<TaxFeeDetailInfoType> taxFeeDetailInfoList) {
        this.refundInfo = refundInfo;
        this.pennyRefundInfo = pennyRefundInfo;
        this.revalidationInfo = revalidationInfo;
        this.reissueInfo = reissueInfo;
        this.strictRevReiInfo = strictRevReiInfo;
        this.noteText = noteText;
        this.firstTimeFreeRevRei = firstTimeFreeRevRei;
        this.ptcmd = ptcmd;
        this.serviceFeeInfo = serviceFeeInfo;
        this.bookingChannel = bookingChannel;
        this.tagList = tagList;
        this.taxFeeInfo = taxFeeInfo;
        this.taxFeeDetailInfoList = taxFeeDetailInfoList;
    }

    public PenaltyFormatResultType() {
    }

    @FieldDoc("退票信息")
    @JsonProperty("RefundInfo")
    @XmlElement(name = "RefundInfo")
    private PenaltyInfoType refundInfo;

    @FieldDoc("24小时小额退信息")
    @JsonProperty("PennyRefundInfo")
    @XmlElement(name = "PennyRefundInfo")
    private PennyRefundInfoType pennyRefundInfo;

    @FieldDoc("改期信息，仅下单使用")
    @JsonProperty("RevalidationInfo")
    @XmlElement(name = "RevalidationInfo")
    private PenaltyInfoType revalidationInfo;

    @FieldDoc("换开信息，仅下单使用")
    @JsonProperty("ReissueInfo")
    @XmlElement(name = "ReissueInfo")
    private PenaltyInfoType reissueInfo;

    @FieldDoc("改期和换开取严后的信息")
    @JsonProperty("StrictRevReiInfo")
    @XmlElement(name = "StrictRevReiInfo")
    private PenaltyInfoType strictRevReiInfo;

    @FieldDoc("退改签备注")
    @JsonProperty("NoteText")
    @XmlElement(name = "NoteText")
    private RemarkTextType noteText;

    @FieldDoc("第一次免费标识，1.改期免费，2.换开免费，3.都免费，空白表示没有第一次免费")
    @JsonProperty("FirstTimeFreeRevRei")
    @XmlElement(name = "FirstTimeFreeRevRei")
    private int firstTimeFreeRevRei;

    @JsonProperty("Ptcmd")
    @XmlElement(name = "Ptcmd")
    private String ptcmd;

    @FieldDoc("服务费信息，仅下单使用")
    @JsonProperty("ServiceFeeInfo")
    @XmlElement(name = "ServiceFeeInfo")
    private BaseFeeInfoType serviceFeeInfo;

    @JsonProperty("BookingChannel")
    @XmlElement(name = "BookingChannel")
    private String bookingChannel;

    @FieldDoc("存储补充结点，仅供下单使用。")
    @JsonProperty("TagList")
    @XmlElement(name = "Tag", namespace = "urn:ctrip:api:flight:data:flighttypes:v2")
    @XmlElementWrapper(name = "TagList")
    private List<TagType> tagList;

    @FieldDoc("全部未使用不得退票时的退税明细")
    @JsonProperty("TaxFeeInfo")
    @XmlElement(name = "TaxFeeInfo")
    private TaxFeeInfoType taxFeeInfo;

    @FieldDoc("详细税费明细，包含FuelDetail和TaxDetail")
    @JsonProperty("TaxFeeDetailInfoList")
    @XmlElement(name = "TaxFeeDetailInfo")
    @XmlElementWrapper(name = "TaxFeeDetailInfoList")
    private List<TaxFeeDetailInfoType> taxFeeDetailInfoList;

    /**
     * 退票信息
     */
    public PenaltyInfoType getRefundInfo() {
        return this.refundInfo;
    }

    public void setRefundInfo(PenaltyInfoType refundInfo) {
        this.refundInfo = refundInfo;
    }

    /**
     * 24小时小额退信息
     */
    public PennyRefundInfoType getPennyRefundInfo() {
        return this.pennyRefundInfo;
    }

    public void setPennyRefundInfo(PennyRefundInfoType pennyRefundInfo) {
        this.pennyRefundInfo = pennyRefundInfo;
    }

    /**
     * 改期信息，仅下单使用
     */
    public PenaltyInfoType getRevalidationInfo() {
        return this.revalidationInfo;
    }

    public void setRevalidationInfo(PenaltyInfoType revalidationInfo) {
        this.revalidationInfo = revalidationInfo;
    }

    /**
     * 换开信息，仅下单使用
     */
    public PenaltyInfoType getReissueInfo() {
        return this.reissueInfo;
    }

    public void setReissueInfo(PenaltyInfoType reissueInfo) {
        this.reissueInfo = reissueInfo;
    }

    /**
     * 改期和换开取严后的信息
     */
    public PenaltyInfoType getStrictRevReiInfo() {
        return this.strictRevReiInfo;
    }

    public void setStrictRevReiInfo(PenaltyInfoType strictRevReiInfo) {
        this.strictRevReiInfo = strictRevReiInfo;
    }

    /**
     * 退改签备注
     */
    public RemarkTextType getNoteText() {
        return this.noteText;
    }

    public void setNoteText(RemarkTextType noteText) {
        this.noteText = noteText;
    }

    /**
     * 第一次免费标识，1.改期免费，2.换开免费，3.都免费，空白表示没有第一次免费
     */
    public int getFirstTimeFreeRevRei() {
        return this.firstTimeFreeRevRei;
    }

    public void setFirstTimeFreeRevRei(int firstTimeFreeRevRei) {
        this.firstTimeFreeRevRei = firstTimeFreeRevRei;
    }

    public String getPtcmd() {
        return this.ptcmd;
    }

    public void setPtcmd(String ptcmd) {
        this.ptcmd = ptcmd;
    }

    /**
     * 服务费信息，仅下单使用
     */
    public BaseFeeInfoType getServiceFeeInfo() {
        return this.serviceFeeInfo;
    }

    public void setServiceFeeInfo(BaseFeeInfoType serviceFeeInfo) {
        this.serviceFeeInfo = serviceFeeInfo;
    }

    public String getBookingChannel() {
        return this.bookingChannel;
    }

    public void setBookingChannel(String bookingChannel) {
        this.bookingChannel = bookingChannel;
    }

    /**
     * 存储补充结点，仅供下单使用。
     */
    public List<TagType> getTagList() {
        return this.tagList;
    }

    public void setTagList(List<TagType> tagList) {
        this.tagList = tagList;
    }

    /**
     * 全部未使用不得退票时的退税明细
     */
    public TaxFeeInfoType getTaxFeeInfo() {
        return this.taxFeeInfo;
    }

    public void setTaxFeeInfo(TaxFeeInfoType taxFeeInfo) {
        this.taxFeeInfo = taxFeeInfo;
    }

    /**
     * 详细税费明细，包含FuelDetail和TaxDetail
     */
    public List<TaxFeeDetailInfoType> getTaxFeeDetailInfoList() {
        return this.taxFeeDetailInfoList;
    }

    public void setTaxFeeDetailInfoList(List<TaxFeeDetailInfoType> taxFeeDetailInfoList) {
        this.taxFeeDetailInfoList = taxFeeDetailInfoList;
    }

    // Used by DatumWriter. Applications should not call.
    @Override
    public Object get(int fieldPos) {
        switch(fieldPos) {
            case 0: return (PenaltyInfoType) this.refundInfo;
            case 1: return (PennyRefundInfoType) this.pennyRefundInfo;
            case 2: return (PenaltyInfoType) this.revalidationInfo;
            case 3: return (PenaltyInfoType) this.reissueInfo;
            case 4: return (PenaltyInfoType) this.strictRevReiInfo;
            case 5: return (RemarkTextType) this.noteText;
            case 6: return (int) this.firstTimeFreeRevRei;
            case 7: return (String) this.ptcmd;
            case 8: return (BaseFeeInfoType) this.serviceFeeInfo;
            case 9: return (String) this.bookingChannel;
            case 10: return (List<TagType>) this.tagList;
            case 11: return (TaxFeeInfoType) this.taxFeeInfo;
            case 12: return (List<TaxFeeDetailInfoType>) this.taxFeeDetailInfoList;
            default: throw new BaijiRuntimeException("Bad index " + fieldPos + " in get()");
        }
    }

    // Used by DatumReader. Applications should not call.
    @Override
    public void put(int fieldPos, Object fieldValue) {
        switch(fieldPos) {
            case 0: this.refundInfo = (PenaltyInfoType)fieldValue; break;
            case 1: this.pennyRefundInfo = (PennyRefundInfoType)fieldValue; break;
            case 2: this.revalidationInfo = (PenaltyInfoType)fieldValue; break;
            case 3: this.reissueInfo = (PenaltyInfoType)fieldValue; break;
            case 4: this.strictRevReiInfo = (PenaltyInfoType)fieldValue; break;
            case 5: this.noteText = (RemarkTextType)fieldValue; break;
            case 6: this.firstTimeFreeRevRei = (int)fieldValue; break;
            case 7: this.ptcmd = (String)fieldValue; break;
            case 8: this.serviceFeeInfo = (BaseFeeInfoType)fieldValue; break;
            case 9: this.bookingChannel = (String)fieldValue; break;
            case 10: this.tagList = (List<TagType>)fieldValue; break;
            case 11: this.taxFeeInfo = (TaxFeeInfoType)fieldValue; break;
            case 12: this.taxFeeDetailInfoList = (List<TaxFeeDetailInfoType>)fieldValue; break;
            default: throw new BaijiRuntimeException("Bad index " + fieldPos + " in put()");
        }
    }

    @Override
    public Object get(String fieldName) {
        Schema schema = getSchema();
        if (!(schema instanceof RecordSchema)) {
            return null;
        }
        Field field = ((RecordSchema) schema).getField(fieldName);
        return field != null ? get(field.getPos()) : null;
    }

    @Override
    public void put(String fieldName, Object fieldValue) {
        Schema schema = getSchema();
        if (!(schema instanceof RecordSchema)) {
            return;
        }
        Field field = ((RecordSchema) schema).getField(fieldName);
        if (field != null) {
            put(field.getPos(), fieldValue);
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final PenaltyFormatResultType other = (PenaltyFormatResultType)obj;
        return
            Objects.equal(this.refundInfo, other.refundInfo) && 
            Objects.equal(this.pennyRefundInfo, other.pennyRefundInfo) && 
            Objects.equal(this.revalidationInfo, other.revalidationInfo) && 
            Objects.equal(this.reissueInfo, other.reissueInfo) && 
            Objects.equal(this.strictRevReiInfo, other.strictRevReiInfo) && 
            Objects.equal(this.noteText, other.noteText) && 
            Objects.equal(this.firstTimeFreeRevRei, other.firstTimeFreeRevRei) && 
            Objects.equal(this.ptcmd, other.ptcmd) && 
            Objects.equal(this.serviceFeeInfo, other.serviceFeeInfo) && 
            Objects.equal(this.bookingChannel, other.bookingChannel) && 
            Objects.equal(this.tagList, other.tagList) && 
            Objects.equal(this.taxFeeInfo, other.taxFeeInfo) && 
            Objects.equal(this.taxFeeDetailInfoList, other.taxFeeDetailInfoList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.refundInfo);
        result = 31 * result + Objects.hashCode(this.pennyRefundInfo);
        result = 31 * result + Objects.hashCode(this.revalidationInfo);
        result = 31 * result + Objects.hashCode(this.reissueInfo);
        result = 31 * result + Objects.hashCode(this.strictRevReiInfo);
        result = 31 * result + Objects.hashCode(this.noteText);
        result = 31 * result + Objects.hashCode(this.firstTimeFreeRevRei);
        result = 31 * result + Objects.hashCode(this.ptcmd);
        result = 31 * result + Objects.hashCode(this.serviceFeeInfo);
        result = 31 * result + Objects.hashCode(this.bookingChannel);
        result = 31 * result + Objects.hashCode(this.tagList);
        result = 31 * result + Objects.hashCode(this.taxFeeInfo);
        result = 31 * result + Objects.hashCode(this.taxFeeDetailInfoList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("refundInfo", refundInfo)
            .add("pennyRefundInfo", pennyRefundInfo)
            .add("revalidationInfo", revalidationInfo)
            .add("reissueInfo", reissueInfo)
            .add("strictRevReiInfo", strictRevReiInfo)
            .add("noteText", noteText)
            .add("firstTimeFreeRevRei", firstTimeFreeRevRei)
            .add("ptcmd", ptcmd)
            .add("serviceFeeInfo", serviceFeeInfo)
            .add("bookingChannel", bookingChannel)
            .add("tagList", tagList)
            .add("taxFeeInfo", taxFeeInfo)
            .add("taxFeeDetailInfoList", taxFeeDetailInfoList)
            .toString();
    }
}